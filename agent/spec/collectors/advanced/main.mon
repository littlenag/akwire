name 'advanced'
#platform :linux
#arch :noarch
version '0.0.1'

description "Advanced collector"

option :basic_number,
       :description => "Some integer value"

option :basic_string,
       :description => "Some string value"

# Boolean, Integer, Float, String
# Array of the above, plus Json blob

option :defaulted_number,
       :description => "Defaulted number",
       :type => Integer,
       :default => 5

pattern :unbounded

pattern :bounded_by_regex, /foo|bar/ do
  description "Bounded pattern by regex"
end

pattern :bounded_by_enum, ["tx", "rx"] do
  description "Bounded pattern by enum"
end

# Multi-measurement def
measurement [:test_value_rx, :test_value_tx] do
  collect {
    observe(1, :test_value_rx)
    observe(2, :test_value_tx)
  }
end

# Templated-measurement def
measurement :test_value, :regex => bounded_by_regex do
#  it's ok if these are left out
#  description "Description"
#  units "none"
#  type :absolute
  collect { 
    observe(1, :regex => "foo")
  }
end

measurement :test_observe do
  collect { observe(1) }
end
