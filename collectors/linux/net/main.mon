name 'net'
version '0.1'
author "Mark Kegel", "mark.kegel@gmail.com"

description "Collects network interface metrics."

# Any Redhat RHEL 6.x compatible
#os_family "Redhat"
#os_version "6.x"
#platform :linux
#arch :noarch

option :collect_loopback,
       :description => "When true will collect stats for the loopback device",
       :type => Boolean,
       :default => false

# other options: extended stats?
# specify which interfaces

# bytes, packets
# percent used

# errors

# auto -> counter to gauge conversion?
# would need a data bag in order to calculate rates

pattern :interface do
  description "Interface name, e.g. 'eth1' or 'lo'"
end

measurement :core_stats, :interface => :interface, :direction => [:tx,:rx] do
  description "Basic network interface stats"
  units "bytes", include_in_key = true
  type :counter
  collect {
    # Drop the header that the kernel includes
    File.read("/proc/net/dev").lines.drop(2).each { |line|
      parts = line.split
      interface, bytes_rx = parts[0].split(":")
      bytes_tx = parts[8]
      observe(bytes_rx, :interface => interface, :direction => "rx")
      observe(bytes_tx, :interface => interface, :direction => "tx")
    }
  }
end

measurement :core_stats, :interface => {}, :direction => [:tx,:rx] do
  description "Basic network interface stats"
  units "packets", include_in_key = true
  type :counter
  collect {
    # Drop the header that the kernel includes
    File.read("/proc/net/dev").lines.drop(2).each { |line|
      parts = line.split
      interface, bytes_rx = parts[0].split(":")
      packets_rx = parts[1]
      packets_tx = parts[9]
      observe(bytes_rx, :interface => interface, :direction => "rx")
      observe(bytes_tx, :interface => interface, :direction => "tx")
    }
  }
end
